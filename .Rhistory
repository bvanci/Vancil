install.packages(c("devtools", "usethis", "roxygen2", "testthat"))
plot_data <- function(data, x, y) {
if (!is.data.frame(data)) stop("Input must be a data frame")
ggplot2::ggplot(data, ggplot2::aes_string(x = x, y = y)) +
ggplot2::geom_point()
}
#' Plot Data
#'
#' This function plots data using ggplot2.
#'
#' @param data A data frame.
#' @param x The column name for the x-axis.
#' @param y The column name for the y-axis.
#' @return A ggplot object.
#' @export
plot_data <- function(data, x, y) {
ggplot2::ggplot(data, ggplot2::aes_string(x = x, y = y)) +
ggplot2::geom_point()
}
devtools::document()
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes", "latticeExtra", "MASS", "PerformanceAnalytics", "psych", "plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
usethis::use_testthat()
test_that("plot_data works", {
df <- data.frame(x = 1:10, y = 1:10)
p <- plot_data(df, "x", "y")
expect_s3_class(p, "ggplot")
})
install.packages("testthat")
usethis::use_testthat()
test_that("plot_data works", {
df <- data.frame(x = 1:10, y = 1:10)
p <- plot_data(df, "x", "y")
expect_s3_class(p, "ggplot")
})
usethis::use_vignette("mypackage-intro")
devtools::build_vignettes()
library(Vancil)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Installation
You can install mypackage from GitHub:
```R
```R
# From source:
install.packages("path/to/mypackage.tar.gz", repos = NULL, type = "source")
usethis::use_readme_md()
usethis::use_readme_md()
usethis::use_readme_md()
library(Vancil)
# Create a scatterplot
df <- data.frame(x = 1:10, y = 1:10)
plot_data(df, "x", "y")
# Create a histogram
custom_histogram(df, "x")
plot_data()
library(Vancil)
ls("package:Vancil")
library(Vancil)
ls("package:Vancil")
usethis::use_testthat()
test_that("plot_data works as expected", {
df <- data.frame(x = 1:10, y = 1:10)
p <- plot_data(df, "x", "y")
expect_s3_class(p, "ggplot")
expect_error(plot_data("not a dataframe", "x", "y"))
})
library(testthat)
test_that("plot_data works as expected", {
df <- data.frame(x = 1:10, y = 1:10)
p <- plot_data(df, "x", "y")
expect_s3_class(p, "ggplot")
expect_error(plot_data("not a dataframe", "x", "y"))
})
test_that("custom_histogram works as expected", {
df <- data.frame(x = rnorm(100))
p <- custom_histogram(df, "x")
expect_s3_class(p, "ggplot")
expect_error(custom_histogram("not a dataframe", "x"))
})
library(Vancil)
# Example data
df <- data.frame(x = 1:10, y = rnorm(10))
# Create the scatterplot
plot_data(df, "x", "y")
df <- data.frame(x = rnorm(100))
custom_histogram(df, "x")
devtools::load_all(".")
install.packages("animation")
setwd("~/Vancil")
devtools::document()  # Ensure NAMESPACE and documentation files are up-to-date
devtools::document()  # Ensure NAMESPACE and documentation files are up-to-date
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes", "latticeExtra", "MASS", "PerformanceAnalytics", "psych", "plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
install.packages("animation")
devtools::build()     # Build the package
devtools::check()     # Check for errors or warnings
list.files("path/to/Vancil", recursive = TRUE)
getwd()
list.files(recursive = TRUE)
file.rename("R/.gitignore", "../.gitignore")
file.rename("R/R.Rproj", "../Vancil.Rproj")
file.rename("R/README.md", "../README.md")
file.rename("R/tests", "../tests")
file.rename("R/vignettes", "../vignettes")
unlink("R/hello.R")
file.rename("../custom_histogram.R", "R/custom_histogram.R")
file.rename("../plot_data.R", "R/plot_data.R")
list.files(recursive = TRUE, pattern = "custom_histogram.R")
list.files(recursive = TRUE, pattern = "plot_data.R")
file.rename("custom_histogram.R", "R/custom_histogram.R")
file.rename("plot_data.R", "R/plot_data.R")
list.files("R")
devtools::document()  # Update the documentation
rm(list = c("plot_data", "custom_histogram"))
rm(list = c("plot_data"))
devtools::document()
unlink("NAMESPACE")
devtools::document()
export(plot_data)
export(custom_histogram)
devtools::document()
export(plot_data)
devtools::build()
devtools::load_all()
ls("package:Vancil")
# Example data
df <- data.frame(x = 1:10, y = rnorm(10))
# Test plot_data
plot_data(df, "x", "y")
usethis::use_testthat()
library(testthat)
library(Vancil)
usethis::use_test("plot_data")
usethis::use_test("custom_histogram")
usethis::use_readme_md()
install.packages("devtools")
devtools::run_examples()
list.files("R", pattern = "hello")
unlink("R/hello.R")
unlink("man/hello.Rd")
devtools::document()
devtools::run_examples()
list.files("R", pattern = "hello")
devtools::check()
library(Vancil)
# Test plot_data
df <- data.frame(x = 1:10, y = rnorm(10))
plot_data(df, "x", "y")
# Test custom_histogram
df <- data.frame(x = rnorm(100))
custom_histogram(df, "x")
devtools::build()
install.packages("path/to/Vancil_0.1.0.tar.gz", repos = NULL, type = "source")
library(Vancil)
ls("package:Vancil")
usethis::use_github()
library(bvanc)
ls("package:bvanc")
git commit -m "Organized Vancil package and updated documentation"
remotes::install_github("bvanci/Vancil")
remotes::install_github("bvanc/Vancil")
usethis::use_git_config(user.name = "bvanci", user.email = "brodiev0520@yahoo.com")
usethis::use_git_config(user.name = "bvanci", user.email = "brodiev0520@yahoo.com")
usethis::use_git()
